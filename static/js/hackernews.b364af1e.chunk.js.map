{"version":3,"sources":["webpack:///./src/api/httpClient.js","webpack:///./src/api/index.js","webpack:///./src/api/hnApi.js","webpack:///./src/components/tableHeader/TableHeader.js","webpack:///./src/components/hackerNews/HackerNews.js","webpack:///./src/utils/assetUtils.js"],"names":["httpClient","baseURL","get","path","options","fetch","then","res","ok","Error","statusText","json","getHnAPI","post","body","method","JSON","stringify","headers","apiFactory","http","news","all","page","create","newHN","hnApi","TableHeader","props","hnHTTP","hnAPI","HackerNews","navNext","navPrevious","serverNews","useServerData","data","useState","hits","rawData","setRawData","match","params","id","Number","response","updateVote","story_id","updatedData","map","item","push","points","axes","React","useMemo","primary","type","position","lineChart","style","width","height","className","i","key","num_comments","onClick","console","log","src","assetName","process","imagePath","alt","story_title","aria-label","exact","to","activeClassName","fetchData"],"mappings":"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","file":"static/js/hackernews.b364af1e.chunk.js","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\n\r\nexport function httpClient(baseURL) {\r\n  return {\r\n    get: (path, options) => {\r\n      return fetch(baseURL + path, options).then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(res.statusText);\r\n        }\r\n\r\n        return res.json();\r\n      });\r\n    },\r\n\r\n    getHnAPI: (path, options) => {\r\n      return fetch(path, options).then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(res.statusText);\r\n        }\r\n\r\n        return res.json();\r\n      });\r\n    },\r\n\r\n    post: (path, body, options = {}) => {\r\n      return fetch(baseURL + path, {\r\n        ...options,\r\n        method: 'POST',\r\n        body: JSON.stringify(body),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...options.headers\r\n        }\r\n      }).then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(res.statusText);\r\n        }\r\n\r\n        return res.json();\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { httpClient } from './httpClient';\r\nimport { hnApi } from './hnApi';\r\n\r\nexport function apiFactory(http) {\r\n  return {\r\n    news: hnApi(http)\r\n  };\r\n}\r\n\r\nconst http = httpClient('http://localhost:3000');\r\nconst hnHTTP = httpClient('https://hn.algolia.com/api/v1/search_by_date');\r\nexport const api = apiFactory(http);\r\nexport const hnAPI = apiFactory(hnHTTP);\r\n","export function hnApi(http) {\r\n  return {\r\n    all: page => {\r\n      return http.get(`?page=${page}`);\r\n    },\r\n\r\n    create: (newHN, page) => {\r\n      return http.post('/api/hn', newHN);\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst TableHeader = props => {\r\n  return (\r\n    <tr>\r\n      <th>Comments</th>\r\n      <th>Vote Count</th>\r\n      <th>Up Vote</th>\r\n      <th>News Details</th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Chart } from 'react-charts';\r\nimport { imagePath } from '../../utils/assetUtils';\r\nimport { hnAPI } from '../../api';\r\nimport { useServerData } from '../../state/serverDataContext';\r\nimport TableHeader from '../tableHeader/TableHeader';\r\n\r\nconst HackerNews = props => {\r\n  const serverNews = useServerData(data => {\r\n    return data.news || [];\r\n  });\r\n  const [rawData, setRawData] = useState(serverNews.hits);\r\n  let navNext;\r\n  let navPrevious;\r\n  if (props.match.params && props.match.params.id) {\r\n    if (props.match.params.id <= 1) {\r\n      navPrevious = '/HackerNews/';\r\n    }\r\n    navPrevious = '/HackerNews/' + (Number(props.match.params.id) - 1);\r\n    navNext = '/HackerNews/' + (Number(props.match.params.id) + 1);\r\n  } else {\r\n    navPrevious = '/HackerNews/';\r\n    navNext = '/HackerNews/2';\r\n  }\r\n  let response = [];\r\n  rawData &&\r\n    response.push(\r\n      rawData.map(item => {\r\n        return [item.story_id ? item.story_id : 'N/A', item.points];\r\n      })\r\n    );\r\n\r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, type: 'ordinal', position: 'bottom' },\r\n      { type: 'linear', position: 'left' }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const lineChart = (\r\n    // A react-chart hyper-responsively and continuously fills the available\r\n    // space of its parent element automatically\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '300px'\r\n      }}\r\n    >\r\n      <Chart data={response} axes={axes} />\r\n    </div>\r\n  );\r\n\r\n  const updateVote = story_id => {\r\n    let updatedData = [];\r\n    rawData.map(item => {\r\n      if (item.story_id === story_id) {\r\n        updatedData.push({\r\n          ...item,\r\n          points: item.points ? Number(item.points) + 1 : 1\r\n        });\r\n      } else {\r\n        updatedData.push(item);\r\n      }\r\n    });\r\n    setRawData(updatedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"hacker-news\">\r\n      <h1 className=\"hn-title\">Hacker news page</h1>\r\n      <table>\r\n        <thead>\r\n          <TableHeader />\r\n        </thead>\r\n        <tbody>\r\n          {rawData &&\r\n            rawData.map((item, i) => {\r\n              return (\r\n                <tr key={i}>\r\n                  <td className=\"text-center\">\r\n                    {item.num_comments ? item.num_comments : 0}\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    {item.points ? item.points : 0}\r\n                  </td>\r\n                  <td\r\n                    onClick={() => {\r\n                      console.log('Clicking me', item);\r\n                      updateVote(item.story_id);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      width=\"10px\"\r\n                      className=\"upvote\"\r\n                      src={imagePath('arrow-up.png')}\r\n                      alt=\"Up Vote\"\r\n                    />\r\n                  </td>\r\n                  <td>{item.story_title}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n\r\n      <nav className=\"navigation\" aria-label=\"navigation\">\r\n        <NavLink exact to={navPrevious} activeClassName=\"active\">\r\n          Previous\r\n        </NavLink>{' '}\r\n        <NavLink exact to={navNext} activeClassName=\"active\">\r\n          Next\r\n        </NavLink>\r\n      </nav>\r\n\r\n      <div>{lineChart}</div>\r\n    </div>\r\n  );\r\n};\r\nHackerNews.fetchData = () => {\r\n  return hnAPI.news.all(1).then(news => {\r\n    return {\r\n      news\r\n    };\r\n  });\r\n};\r\n\r\nexport default HackerNews;\r\n","// We can use \"process.env.VAR_NAME\" on both the server and the client.\r\n// See config/env.js and server/indexHtml.js\r\nexport function imagePath(assetName) {\r\n  return `${process.env.PUBLIC_URL}/images/${assetName}`;\r\n}\r\n"],"sourceRoot":""}